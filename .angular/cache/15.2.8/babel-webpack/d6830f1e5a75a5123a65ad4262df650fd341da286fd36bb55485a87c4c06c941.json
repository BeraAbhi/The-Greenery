{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductDetailComponent = class ProductDetailComponent {\n  constructor(route, httpRequest) {\n    this.route = route;\n    this.httpRequest = httpRequest;\n    this.productQuantity = 1;\n  }\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.httpRequest.reciveProductWithId(id).subscribe(res => {\n      this.productDetail = res;\n      this.productImage = res.productImage;\n    });\n    if (localStorage.length >= 1) {\n      this.localstorageLoginData = JSON.parse(localStorage.getItem(\"loginData\") || '');\n    }\n  }\n  AddToCart(val) {\n    this.cartArr = {\n      \"productName\": this.productDetail?.productName,\n      \"productImage\": this.productDetail?.productImage,\n      \"productPrice\": this.productDetail?.productPrice,\n      \"productQuantity\": this.productQuantity,\n      \"userName\": this.localstorageLoginData.firstName\n    };\n    this.httpRequest.getDataFromCart().subscribe(res => {\n      let cartdata = res;\n      let index = res.findIndex(data => data.productName === this.productDetail?.productName && this.productDetail?.productName && data.userName === this.localstorageLoginData.firstName);\n      if (index === -1) {\n        this.httpRequest.pushInCart(this.cartArr).subscribe();\n      } else {\n        this.cartArr.productQuantity = Number(res[index].productQuantity) + Number(this.productQuantity);\n        this.httpRequest.updateCartData(res[index].id, this.cartArr).subscribe();\n      }\n    });\n  }\n  onplus(val) {\n    this.productQuantity = Number(val) + 1;\n  }\n  onMinus(val) {\n    debugger;\n    if (Number(val) !== 1) {\n      this.productQuantity = Number(val) - 1;\n    }\n  }\n  onChangeImage(val) {\n    this.productImage = val;\n  }\n};\nProductDetailComponent = __decorate([Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})], ProductDetailComponent);\nexport { ProductDetailComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAuC,eAAe;AASjE,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,KAAqB,EAC9BC,WAAuB;IADd,UAAK,GAALD,KAAK;IACd,gBAAW,GAAXC,WAAW;IAJtB,oBAAe,GAAC,CAAC;EAIqB;EAEtCC,QAAQ;IAEN,IAAIC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAEzC,IAAI,CAACJ,WAAW,CAACK,mBAAmB,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,GAAG,IAAG;MACvD,IAAI,CAACC,aAAa,GAACD,GAAG;MACtB,IAAI,CAACE,YAAY,GAACF,GAAG,CAACE,YAAY;IACpC,CAAC,CAAC;IACF,IAAGC,YAAY,CAACC,MAAM,IAAI,CAAC,EAAE;MAC3B,IAAI,CAACC,qBAAqB,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;;EAEpF;EAEAC,SAAS,CAACC,GAAO;IACf,IAAI,CAACC,OAAO,GACZ;MACE,aAAa,EAAE,IAAI,CAACV,aAAa,EAAEW,WAAW;MAC9C,cAAc,EAAE,IAAI,CAACX,aAAa,EAAEC,YAAY;MAChD,cAAc,EAAE,IAAI,CAACD,aAAa,EAAEY,YAAY;MAChD,iBAAiB,EAAE,IAAI,CAACC,eAAe;MACvC,UAAU,EAAE,IAAI,CAACT,qBAAqB,CAACU;KACxC;IAED,IAAI,CAACtB,WAAW,CAACuB,eAAe,EAAE,CAACjB,SAAS,CAAEC,GAAO,IAAG;MACtD,IAAIiB,QAAQ,GAAGjB,GAAG;MAClB,IAAIkB,KAAK,GAAGlB,GAAG,CAACmB,SAAS,CAAEC,IAAQ,IAAIA,IAAI,CAACR,WAAW,KAAK,IAAI,CAACX,aAAa,EAAEW,WAAW,IAAI,IAAI,CAACX,aAAa,EAAEW,WAAW,IAAIQ,IAAI,CAACC,QAAQ,KAAK,IAAI,CAAChB,qBAAqB,CAACU,SAAS,CAAC;MACzL,IAAGG,KAAK,KAAK,CAAC,CAAC,EAAC;QACd,IAAI,CAACzB,WAAW,CAAC6B,UAAU,CAAC,IAAI,CAACX,OAAO,CAAC,CAACZ,SAAS,EAAE;OACtD,MACG;QACF,IAAI,CAACY,OAAO,CAACG,eAAe,GAAGS,MAAM,CAACvB,GAAG,CAACkB,KAAK,CAAC,CAACJ,eAAe,CAAC,GAAGS,MAAM,CAAC,IAAI,CAACT,eAAe,CAAC;QAChG,IAAI,CAACrB,WAAW,CAAC+B,cAAc,CAACxB,GAAG,CAACkB,KAAK,CAAC,CAACvB,EAAE,EAAC,IAAI,CAACgB,OAAO,CAAC,CAACZ,SAAS,EAAE;;IAE3E,CAAC,CAAC;EACJ;EAEA0B,MAAM,CAACf,GAAQ;IACb,IAAI,CAACI,eAAe,GAACS,MAAM,CAACb,GAAG,CAAC,GAAC,CAAC;EACpC;EAEAgB,OAAO,CAAChB,GAAO;IACb;IACA,IAAGa,MAAM,CAACb,GAAG,CAAC,KAAG,CAAC,EAAC;MACnB,IAAI,CAACI,eAAe,GAACS,MAAM,CAACb,GAAG,CAAC,GAAC,CAAC;;EAEpC;EAEAiB,aAAa,CAACjB,GAAO;IACnB,IAAI,CAACR,YAAY,GAACQ,GAAG;EACvB;CACD;AA7DYpB,sBAAsB,eALlCD,SAAS,CAAC;EACTuC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWxC,sBAAsB,CA6DlC;SA7DYA,sBAAsB","names":["Component","ProductDetailComponent","constructor","route","httpRequest","ngOnInit","id","snapshot","params","reciveProductWithId","subscribe","res","productDetail","productImage","localStorage","length","localstorageLoginData","JSON","parse","getItem","AddToCart","val","cartArr","productName","productPrice","productQuantity","firstName","getDataFromCart","cartdata","index","findIndex","data","userName","pushInCart","Number","updateCartData","onplus","onMinus","onChangeImage","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\intenship angular js\\theGreenery\\src\\app\\@shared\\component\\product-detail\\product-detail.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { cart, httpRequest, product } from '../../services/httpRequest.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  productDetail:product | undefined;\n  localstorageLoginData: any ;\n  cartArr:any;\n  productQuantity=1;\n  productImage:any\n\n  constructor(private route: ActivatedRoute,\n    private  httpRequest:httpRequest) { }\n    \n  ngOnInit(): void {\n\n    let id = this.route.snapshot.params['id']\n  \n    this.httpRequest.reciveProductWithId(id).subscribe(res => {\n      this.productDetail=res\n      this.productImage=res.productImage\n    })\n    if(localStorage.length >= 1) {\n      this.localstorageLoginData = JSON.parse(localStorage.getItem(\"loginData\") || '');\n      }\n  }\n\n  AddToCart(val:any){\n    this.cartArr =  \n    {\n      \"productName\": this.productDetail?.productName,\n      \"productImage\": this.productDetail?.productImage,\n      \"productPrice\": this.productDetail?.productPrice,\n      \"productQuantity\": this.productQuantity,\n      \"userName\": this.localstorageLoginData.firstName,\n    }\n\n    this.httpRequest.getDataFromCart().subscribe((res:any)=>{\n      let cartdata = res\n      let index = res.findIndex((data:any)=> data.productName === this.productDetail?.productName && this.productDetail?.productName && data.userName === this.localstorageLoginData.firstName)\n      if(index === -1){\n        this.httpRequest.pushInCart(this.cartArr).subscribe();\n      }\n      else{\n        this.cartArr.productQuantity = Number(res[index].productQuantity) + Number(this.productQuantity)\n        this.httpRequest.updateCartData(res[index].id,this.cartArr).subscribe();\n      }\n    })\n  }\n\n  onplus(val: any){\n    this.productQuantity=Number(val)+1\n  }\n\n  onMinus(val:any){\n    debugger\n    if(Number(val)!==1){\n    this.productQuantity=Number(val)-1\n    }\n  }\n\n  onChangeImage(val:any){\n    this.productImage=val\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}